@model PickReview

@{
    ViewBag.Title = "Select Graphs in Review ";
}
<div class="container-fluid">
    <div class="row-fluid">
        <h2>@ViewBag.Title</h2>
    </div>
    <div class="row-fluid">
        @using (var form = Html.Bootstrap().Begin(new Form("PickedReview", "Admin").Id("pickreviewform")))
        {
            <div class="col-md-5">
                @Html.HiddenFor(m => m.DeletedReviews)
                @Html.HiddenFor(m => m.Cancel)
                @Html.HiddenFor(m => m.rv.ReviewId)
                @Html.ListBoxFor(m => m.picked, Model.graphs, new { size = 18 })
            </div>
            <div class="col-md-7">
                <div class="row"><h3>Reviews</h3></div>
                <div class="row">
                    <table id="reviews" class="table table-striped table-hover table-condensed table-bordered">
                    <thead>
                    </thead>
                    <tbody>
                        <tr title="Edit Row">
                            <td>
                                @form.FormGroup().TextBoxFor(m => m.rv.Name).Placeholder("New Review Name").Tooltip("Apply name and schedule to selected graphs for review").Class("input-sm").Label().Class("sr-only")
                            </td>
                            <td>
                                @form.FormGroup().TextBoxFor(m => m.rv.Schedule).Placeholder("New Schedule using cron string").Tooltip("Raw cron expression").Class("input-sm").Label().Class("sr-only")
                                @form.FormGroup().TextBoxFor(m => m.rv.Path).Placeholder("Path to Charts").Class("input-sm").Label().Class("sr-only")
                                @form.FormGroup().TextBoxFor(m => m.rv.Template).Placeholder("DateTemplate for Charts").Class("input-sm").Label().Class("sr-only")
                            </td>
                            <td>
                                @form.FormGroup().CheckBoxFor(m => m.NewEmail).Tooltip("Email (checked) or File (unchecked) delivery").Label().LabelText("")
                            </td>
                            <td></td>
                            <td>
                                @Html.Bootstrap().SubmitButton().Text("Save").Class("btn-xs").Id("save").Style(ButtonStyle.Success)
                            </td>
                        </tr>
                        <tr>
                            <th>Review Name</th>
                            <th>
                                Schedule
                                <a href="http://htmlminifiers.com/cron-maker.php" target="_blank"><small>Get cron from here</small></a>
                            </th>
                            <th><i class="fa fa-truck" title="delivery method"></i></th>
                            <th>Last Run</th>
                            <th>
                                <button class="btn btn-primary btn-xs" id="undodelete" title="Undo deletions">
                                    <i class="fa fa-undo"></i>
                                </button>
                            </th>
                        </tr>
                        @Html.DisplayFor(m => m.reviews)
                    </tbody>
                </table>
                </div>
            </div>
        }
    </div>
</div>

@section scripts{
    <script src="~/Scripts/jqCron.js" type="text/javascript"></script>
    <script src="~/Scripts/jquery.signalR-2.2.0.min.js" type="text/javascript"></script>
    <script src="~/signalr/hubs" type="text/javascript"></script>
    <script type="text/javascript">
        var editMode = false;
        var $review = $('#@Html.IdFor(m => m.rv.ReviewId)');
        var $viewBox = $('#@Html.IdFor(m => m.rv.Name)');
        var $schedule = $('#@Html.IdFor(m => m.rv.Schedule)');
        var $type = $('#@Html.IdFor(m => m.NewEmail)');
        var $template = $('#@Html.IdFor(m => m.rv.Template)');
        var $path = $('#@Html.IdFor(m => m.rv.Path)');

        var thub = $.connection.tagHub;
        var charts = [];
        @Html.Raw(Model.snippet)
        var demo1 = $('select[name="picked"]').bootstrapDualListbox({
            nonSelectedListLabel: 'Non-selected',
            selectedListLabel: 'Selected',
            preserveSelectionOnMove: true
        });
        $viewBox.prop('readonly', ($('#bootstrap-duallistbox-selected-list_picked > option').length > 0));
        $('#cancel').on('click', function () {
            $('#@Html.IdFor(m=>m.Cancel)').val(true);
        });
        $('.reviewrow').on('click', function (e) {
            var chart = $(this).data('id');
            var sched = $(this).data('schedule');
            var path = $(this).data('path');
            var template = $(this).data('template');
            var eml = $('.reviewtype', $(this)).data('type');
            demo1.val(charts[chart]);
            demo1.bootstrapDualListbox('refresh', true);
            $viewBox.val($('td.reviewname', $(this)).text());
            $schedule.val(sched);
            $type.prop('checked', eml=='True'?true:false);
            $path.val(path);
            $template.val(template);
            $review.val(chart);
        });
        $('.reviewctl').on('click', function (e) {
            var $row = $(this).closest('tr');
            var id = $row.data('reviewid');
            var name = $('td.reviewname', $row).text();
            var $icon = $('i', $(this));
            var running = $icon.hasClass('fa-stop');
            if (running) {
                thub.server.stopJob(id, name);
                $icon.removeClass('fa-stop').addClass('fa-play');
                $(this).removeClass('btn-warning').addClass('btn-success');
            }
            else {
                thub.server.startJob(id);
                $icon.removeClass('fa-play').addClass('fa-stop');
                $(this).removeClass('btn-success').addClass('btn-warning');
            }

            e.preventDefault();
            e.stopPropagation();
        });
        $('.reviewdel').on('click', function (e) {
            var $row = $(this).closest('tr');
            var id = $row.data('reviewid');
            var name = $('td.reviewname', $row).text();
            if ($.trim($(this).text()) == $viewBox.val())
                $viewBox.val('');
            $('#review_' + id).remove();
            var $dead = $('#@Html.IdFor(m=>m.DeletedReviews)');
            $dead.val($dead.val() + "," + id);
            thub.server.deleteJob(id, name);
            e.preventDefault();
            e.stopPropagation();
        });
        demo1.on('change', function () {
            $viewBox.prop('readonly', ($('#bootstrap-duallistbox-selected-list_picked > option').length == 0));
        });
        thub.client.updateTime = function (id, shorttime) {
            console.log(id + ' update with ' + shorttime);
            var $elem = $('td.lastrun', '#review_' + id).html(shorttime);
        };
        $(function () {
            $.connection.hub.start().done(function () {
            });
            $.connection.hub.disconnected(function () {
                setTimeout(function () {
                    $.connection.hub.start();
                }, 1000); // Re-start connection after 1 second
            });
        });
    </script>
}
