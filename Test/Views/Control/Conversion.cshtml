@model Test.Models.ConversionView

@{
    ViewBag.Title = "Conversion";
    List<IHtmlString> buttons = new List<IHtmlString>() {
            Html.Bootstrap().SubmitButton().Text("Save").Id("saveconversion").Style(ButtonStyle.Success),
            Html.Bootstrap().SubmitButton().Text("Cancel").Id("cancel").Style(ButtonStyle.Default)
    };
}

<div class="container">
    <div class="row">
        <div class="col-xs-12 text-primary"><h3>@(Model.c.ConversionId == 0 ? "Add " : "Edit ")Conversion</h3></div>
    </div>
    <div class="row">
        <div class="col-xs-6">
            <div class="form-group">
                <table class="table table-condensed table-no-border" id="linetable">
                    <thead>
                        <tr>
                            <th>For *</th>
                            <th>A</th>
                            <th>B</th>
                            <th>C</th>
                            <th>D</th>
                        </tr>
                    </thead>
                    <tbody>
                        @Html.DisplayFor(m => m, "LinePick")
                    </tbody>
                </table>
            </div>
        </div>
        <div class="col-xs-6">
        @using (var form = Html.Bootstrap().Begin(new Form("SaveConversion", "Control").Id("conversionform").Type(FormType.Horizontal).LabelWidthXs(4)))
        {
            @Html.HiddenFor(m => m.c.ConversionId)
            @Html.HiddenFor(m => m.c.LineId)
            @form.FormGroup().TextBoxFor(m => m.c.Scheduled)
            @form.FormGroup().RadioButtonListFor(
                        m => m.c.SystemId,
                        m => m.systems,
                        s => s.SystemId,
                        s => s.Pretty).SelectedValues(
                        n => n.SystemId == Model.c.SystemId).DisplayInlineBlock().Label().LabelText("System")
            @form.FormGroup().Class("solutionrecipe").DropDownListFor(m => m.c.SolutionRecipeId, Model.recipes).Size(InputSize.Small).WidthXs(3).Label().LabelText("Solution Type")
            @form.FormGroup().CheckBoxFor(m=>m.c.Exempt).Id("isExempt")
            @form.FormGroup().Id("productlist").DropDownListFor(m => m.c.ProductCodeId, Model.products).Size(InputSize.Small).WidthXs(3).Label().LabelText("Product Code")
            @form.FormGroup().Id("exemptlist").DropDownListFor(m => m.c.ExemptId, Model.exempt).Size(InputSize.Small).WidthXs(3).Label().LabelText("Exempt Code")
            @form.FormGroup().TextBoxFor(m => m.c.FinishFootage)
            @form.FormGroup().Id("extruderlist").DropDownListFor(m => m.c.ExtruderId, Model.extruders).Size(InputSize.Small).WidthXs(3).Label().LabelText("Extruder Color")
            <br />
            @(form.FormGroup().CustomControls(buttons.ToArray()))
        }
        </div>
</div>
@section scripts{
    <script type="text/javascript">
        $(function () {
            console.log($('#isExempt').is(':checked'));
            if ($('#isExempt').is(':checked')) {
                $('#productlist').hide();
                $('#exemptlist').show();
            }
            else {
                $('#productlist').show();
                $('#exemptlist').hide();
            }
            $('button').on('click', function (e) {
                e.preventDefault();
                var id = $(this).data('id');
                var linepost = $('#@Html.IdFor(m => m.c.LineId)');
                linepost.val(id);
                $(this).addClass('active').siblings().removeClass('active');
                $('i.fa-check-square', '#linetable').removeClass('fa-check-square').addClass('fa-square');
                $('i.fa-2x', $(this)).removeClass('fa-square').addClass('fa-check-square');
            });
            $('#isExempt').on('click', function (e) {
                var $this = $(this);
                // $this will contain a reference to the checkbox   
                if ($this.is(':checked')) {
                    $('#productlist').hide();
                    $('#exemptlist').show();
                } else {
                    $('#productlist').show();
                    $('#exemptlist').hide();
                }
            });
            $('#cancel').on('click', function (e) {
                e.preventDefault();
                location.href = '@Url.Action("Lines", "Control", null, Request.Url.Scheme)';
            });
        });
    </script>
}