@model Test.Models.CasingSample

@{ 
    var glyid = Model.Gly == null ? 0 : Model.Gly.ReadingId;
    var oilid = Model.Oil == null ? 0 : Model.Oil.ReadingId;
    var note = string.IsNullOrWhiteSpace(Model.Note) ? "fa-file-o" : "fa-file-text";
    var moistpct = Model.MoistPct.HasValue?Model.MoistPct.Value.ToString("n1"):null;
    var glypct = Model.GlyPct.HasValue?Model.GlyPct.Value.ToString("n1"):null;
}

<tr data-id="@Model.SampleId" 
    data-lineid="@Model.LineId" 
    data-readingid="@glyid" 
    data-productcodeid="@Model.ProductCodeId" 
    class="casingsample @Model.SpecStatus">
    <td   class="Sample lineadd text-primary"><i class="fa fa-plus-circle" title="Click on line to add sample"></i></td>
    <td   class="linecol text-primary">@Model.Line</td>
    @Model.SampledProduct
    <td class="Sample text-primary" style="text-align: center;">
        <a href="#" data-toggle="modal" data-target="#CodeModal" tabindex="-1" title="Click to change Product Code" class="recodelnk">
            &target;
        </a>
    </td>
    <td   class="Sample">@Html.Bootstrap().TextBoxFor(m => m.ReelNumber).Data(new { inputmask = Model.InputMask("n2") }).Class("reel").Label().Class("sr-only")</td>
    <td   class="Sample">@Html.Bootstrap().TextBoxFor(m => m.Footage).Data(new { inputmask = Model.InputMask("n5") }).Label().Class("sr-only")</td>
    <td   class="Sample">@Html.Bootstrap().TextBoxFor(m => m.Delm).Data(new { inputmask = Model.InputMask("n2") }).Label().Class("sr-only")</td>
    <td   class="Sample">@Html.Bootstrap().TextBoxFor(m => m.Roto).Data(new { inputmask = Model.InputMask("n2") }).Label().Class("sr-only")</td>
    <td class="Sample text-primary">
        <a href="#" data-toggle="modal" data-target="#NoteModal" tabindex="-1" title="@Model.Note">
            @Html.HiddenFor(m => m.Note)
            <i class="noter fa @note"></i>
        </a></td>
    @Html.DisplayFor(m=>m.Gly, "Glycerin")
    <td   class="Dry text-warning MoistPct labresult @Model.MoistStatus" title="@Model.MoistSpec">@moistpct</td>
    <td   class="Glycerin text-danger GlyPct labresult @Model.GlyStatus" title="@Model.GlySpec">@glypct</td>
    <td   class="Oil" data-scale="10">@Html.Bootstrap().TextBoxFor(m => m.oilPct).Data(new { inputmask = Model.InputMask("n11") }).Class("cgly").Label().Class("sr-only")</td>
</tr>
@*@if (Model.Oil != null)
{
    <tr data-id="@Model.SampleId" data-lineid="@Model.LineId" data-readingid="@oilid" class="casingsample">
        <td class="linecol text-primary">@Model.Line</td>
        <td class="Sample"></td>
        <td class="Sample"></td>
        <td class="Sample">
        @Html.Bootstrap().TextBoxFor(m => m.Roto).Data(new { inputmask = Model.InputMask("n2") }).Readonly().Label().Class("sr-only")</td>
        @Html.DisplayFor(m => m.Oil, "Oil")
    </tr>
}*@
