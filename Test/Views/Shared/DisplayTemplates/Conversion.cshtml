@model Test.Models.Conversion

@{ 
    var isStarted = !(Model.Started.Value == DateTime.MaxValue);
    var isCompleted = !(Model.Completed == DateTime.MaxValue);
    var started = (!Model.Started.HasValue || !isStarted)?"":Model.Started.Value.ToString("MM-dd HH:mm");
    var completed = (Model.Completed == null || !isCompleted) ? "" : Model.Completed.ToString("MM-dd HH:mm");
    var actions = "";
    var note = "";
    if (!isStarted)
    {
        actions += "<button class='btn btn-xs btn-danger' title='Ignore'><i class='fa fa-ban'></i></button> ";
        actions += "<button class='btn btn-xs btn-info' title='Start'><i class='fa fa-random'></i></button> ";
    }
    if (!isCompleted)
    {
        actions += "<button class='btn btn-xs btn-success' title='Complete'><i class='fa fa-arrow-up'></i></button> ";
    }
    if (Model.Note != null && Model.Note.Length > 0)
    {
        note = "<i class='fa fa-file-text'></i>";
    }
}
<tr data-id="@Model.ConversionId" title="@Model.Note">
    @*@Html.Raw((Model.Active ? "<td title='is active. Click to complete.'><div class='hidden'>active</div><button class='btn btn-success btn-xs stopbatch'><i class='stopbatch fa fa-power-off'> Stop</i></button></td>" : "<td title='is completed'><i class='fa fa-ban text-danger'></i><div class='hidden'>completed</div></td>"))*@
    <td>@Model.line.Name @Html.Raw(note)</td>
    <td>@Model.Scheduled.ToString("yy-MM-dd")</td>
    <td>@started</td>
    <td>@completed</td>
    <th>@Model.product._ProductCode @Model.product.ProductSpec</th>
    <th>@Model.Color</th>
    <th>@Model.FinishFootage</th>
    <th>@Model.Exempt</th>
    <th>@Model.System</th>
    <td>@Model.SolutionType</td>
    <td>@Html.Raw(actions)</td>
</tr>
