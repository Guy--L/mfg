@model Test.Models.CasingView

@{
    ViewBag.Title = "Casing Result";
    Layout = "~/Views/Shared/_Layout2.cshtml";
    var tip = new Tooltip("click to set context").Placement("bottom");
}
<div class="container">
    <div class="row">
        <div class="col-xs-12 text-primary"><h3>Lab Result on @Model.Line.Name at @Model.Stamp.ToString()</h3></div>
    </div>
        <div class="row">
            <div class="col-xs-6">
                @Html.HiddenFor(m => m.SampleId)
                @Html.HiddenFor(m => m.ProductCodeId)
                <h2 class="detailctx">
                    @Html.Bootstrap().Button().Text(@Model.product.FullCode.ToString()).PrependIcon(new Icon("fa fa-2x fa-gift text-info")).Class("ctx").Data(new { target = "Context_Product", id = "Context_ProductCodeId" }).Tooltip(tip)
                    @Html.Bootstrap().Button().Text(@Model.LotNum.ToString()).PrependIcon(new Icon("fa fa-2x fa-barcode text-info")).Class("ctx").Data(new { target = "Context_LotNum", id = "Context_SampleId" }).Tooltip(tip)
                </h2>
                <table class="table table-responsive table-condensed" id="productspectable">
                    <thead>
                        <tr>
                            <th>Specification</th><th class="text-primary">Actual</th>
                            <th style="text-align: left;">Min</th>
                            <th style="text-align: left;" title="Low Control Limit">Low</th>
                            <th style="text-align: left;">Aim</th>
                            <th style="text-align: left;" title="High Control Limit">High</th>
                            <th style="text-align: left;">Max</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr class="@Model.MoistStatus">
                            <td><b>Reel Moisture</b></td>
                            <td class="text-primary"><strong>@Model.MoistPct.Value.ToString("N2")</strong></td>
                            <td>@Model.product.ReelMoist_Min</td><td></td>
                            <td>@Model.product.ReelMoist_Aim</td><td></td>
                            <td>@Model.product.ReelMoist_Max</td>
                        </tr>
                        <tr class="@Model.GlyStatus">
                            <td><b>Glycerin</b></td>
                            <td class="text-primary"><strong>@Model.GlyPct.Value.ToString("N2")</strong></td>
                            <td>@Model.product.Gly_Min</td><td></td>
                            <td>@Model.product.Gly_Aim</td><td></td>
                            <td>@Model.product.Gly_Max</td>
                        </tr>
                        <tr>
                            <td><b>Oil</b></td>
                            <td></td>
                            <td>@Model.product.Oil_Min</td><td></td>
                            <td>@Model.product.Oil_Aim</td><td></td>
                            <td>@Model.product.Oil_Max</td>
                        </tr>
                        <tr>
                            <td><b>Layflat</b></td>
                            <td class="text-primary"
                                title="@Model.layflat.N: stdp @Model.layflat.Stdp.Value.ToString("N2"), 
                                        min @Model.layflat.Minimum.Value.ToString("N2"), 
                                        max @Model.layflat.Maximum.Value.ToString("N2")">
                                @Model.layflat.Average.Value.ToString("N2")
                            </td>
                            <td>@Model.product.LF_Min</td>
                            <td>@Model.product.LF_LCL</td>
                            <td>@Model.product.LF_Aim</td>
                            <td>@Model.product.LF_UCL</td>
                            <td>@Model.product.LF_Max</td>
                        </tr>
                    </tbody>
                </table>
            </div>
            <div class="col-xs-6">
                <br /><br />
                <h5 class="runctx text-primary">
                    @Model.product.FullCode Production Run@(Model.runs.Count>1?"s":"")
                </h5>
                <table class="table table-responsive table-condensed" id="productruntable">
                    <thead>
                        <tr>
                            <th>
                                Line
                            </th>
                            <th>Start</th>
                            <th>End</th>
                            <th>Samples</th>
                        </tr>
                    </thead>
                    <tbody>
                        @Html.DisplayFor(m => m.runs)
                    </tbody>
                </table>
            </div>
        <div class="row">
            <div class="col-xs-12">
                @Html.Bootstrap().Button().Text("Previous").PrependIcon(new Icon("fa fa-caret-left")).Id("previous").Style(ButtonStyle.Success)
                &nbsp;&nbsp;
                @Html.Bootstrap().Button().Text("Next").AppendIcon(new Icon("fa fa-caret-right")).Id("next").Style(ButtonStyle.Primary)
            </div>
        </div>
</div>
@section scripts{
    <script type="text/javascript">
        $(function () {
            var $id = $('#@Html.IdFor(m=>m.SampleId)');
            @*$('#@Html.IdFor(m=>m.c.Scheduled)').datetimepicker({
                timepicker: false
            });*@
            $('#previous').on('click', function (e) {
                e.preventDefault();
                location.href = '@Url.Action("PreviousCasingView", "Home", null, Request.Url.Scheme)/' + $id.val();
            });
            $('#next').on('click', function (e) {
                e.preventDefault();
                location.href = '@Url.Action("NextCasingView", "Home", null, Request.Url.Scheme)/' + $id.val();
            });
            $('button.ctx').on('click', function (e) {
                var target = $(this).data('target');
                var id = $(this).data('id');
                var src = id.split('_')[1];
                $('input#' + id).val($(src).val());
                $('input#' + target).val($(this).text().trim());
            });
        });
    </script>
}
